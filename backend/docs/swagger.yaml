basePath: /v1
definitions:
  main.LoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  main.ProfilePayload:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      sport_preference:
        items:
          type: string
        type: array
    required:
    - age
    - email
    - first_name
    - gender
    - last_name
    - sport_preference
    type: object
  main.RegisterUserPayload:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 72
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for sportify, a social network for sports enthusiasts.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sportify
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: user login
      tags:
      - authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Registers a user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.RegisterUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Registers a user
      tags:
      - authentication
  /profile:
    post:
      consumes:
      - application/json
      description: creates a user profile
      parameters:
      - description: User profile
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.ProfilePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: creates a user profile
      tags:
      - profile
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
